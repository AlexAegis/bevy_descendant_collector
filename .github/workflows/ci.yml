name: ci

on:
  push:
    branches: "**"
  pull_request:
    branches: "**"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Checkout LFS objects
        run: git lfs checkout
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - name: Cache
        uses: Swatinem/rust-cache@v2
      - name: Install alsa and udev
        if: runner.os == 'linux'
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev
      - name: Test
        run: cargo test
      - name: Run doc tests with all features (this also compiles README examples)
        run: cargo test --workspace --doc --all-features
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Checkout LFS objects
        run: git lfs checkout
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt, clippy
      - name: Cache
        uses: Swatinem/rust-cache@v2
      - name: Install alsa and udev
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev
      - name: Run clippy
        run: cargo clippy --workspace --all-targets --all-features
      - name: Check format
        run: cargo fmt --all -- --check
  release:
    if: |
      github.ref_name == github.event.repository.default_branch &&
      github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Checkout LFS objects
        run: git lfs checkout
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - name: Cache
        uses: Swatinem/rust-cache@v2
      - name: Install alsa and udev
        if: runner.os == 'linux'
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev
      - uses: katyo/publish-crates@v2
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          ignore-unpublished-changes: true
