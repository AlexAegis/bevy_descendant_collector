name: Deploy (Github Pages)

on:
  workflow_dispatch:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"

env:
  DEPLOY_ARTIFACT_DIR: "target/web"

jobs:
  build-web:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Checkout LFS objects
        run: git lfs checkout
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - name: Cache
        uses: Swatinem/rust-cache@v2
      - name: Install Dependencies
        run: sudo apt-get update; sudo apt-get install pkg-config libx11-dev libasound2-dev libudev-dev
      - name: Install trunk
        uses: jetli/trunk-action@v0.4.0
        with:
          version: "latest"
      - name: Add wasm target
        run: |
          rustup target add wasm32-unknown-unknown
      - name: Build Release
        run: |
          mkdir -p ${{ env.DEPLOY_ARTIFACT_DIR }}
          cd apps/pong
          trunk build --public-url "${GITHUB_REPOSITORY#*/}" --dist "../../${{ env.DEPLOY_ARTIFACT_DIR }}"
      - name: Inspect built artifact
        run: |
          ls -al ${{ env.DEPLOY_ARTIFACT_DIR }}
      - name: Optimize Wasm
        uses: NiklasEi/wasm-opt-action@v2
        with:
          file: ${{ env.DEPLOY_ARTIFACT_DIR }}/*.wasm
      - name: Deploy to Github Pages
        uses: JamesIves/github-pages-deploy-action@v4.2.5
        with:
          branch: gh-pages
          folder: ${{ env.DEPLOY_ARTIFACT_DIR }}
      - name: prepare pages (use index.html as 404.html)
        if: |
          env.DEPLOY_ARTIFACT_DIR != '' &&
          github.ref_name == ${{ github.event.repository.default_branch }} &&
          github.event_name != 'pull_request'
        run: |
          cp ${{ env.DEPLOY_ARTIFACT_DIR }}/index.html ${{ env.DEPLOY_ARTIFACT_DIR }}/404.html
      - name: setup pages
        uses: actions/configure-pages@v3
        if: |
          env.DEPLOY_ARTIFACT_DIR != '' &&
          github.ref_name == ${{ github.event.repository.default_branch }} &&
          github.event_name != 'pull_request'
      - name: upload artifact
        uses: actions/upload-pages-artifact@v1
        if: |
          env.DEPLOY_ARTIFACT_DIR != '' && 
          github.ref_name == ${{ github.event.repository.default_branch }} && 
          github.event_name != 'pull_request'
        with:
          path: ${{ env.DEPLOY_ARTIFACT_DIR }}
  deploy:
    name: deploy
    if: |
      env.DEPLOY_ARTIFACT_DIR != '' && 
      github.ref_name == ${{ github.event.repository.default_branch }} && 
      github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: [build-web]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: deploy to github pages
        id: deployment
        uses: actions/deploy-pages@v2
